@model ThreeTierDemo.UI.Models.UserViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<main>
    <section class="row" aria-labelledby="aspnetTitle">
        <h1 id="title">Register User</h1>

    </section>
    <br />
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        Register User
    </button>

    <!-- Modal -->
    <div class="modal" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog  modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Register as User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("SaveUser", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <div class="mb-2 offset-3 ">
                            <span class="fw-bold" style="margin-left:0.5rem">Image Preview</span>
                        </div>

                        <div class="row mb-1">
                            <div class=" offset-3">
                                <img src="#" alt="Preview" style="max-width: 100%; display: none;" id="previewImage" />
                                <div id="placeholder" class="rounded-circle" style="width: 120px; height: 120px; background-color: #808080; display: block; text-align: center;">

                                </div>
                            </div>
                        </div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row mb-3 offset-3">
                            @Html.LabelFor(model => model.PictureUrl, htmlAttributes: new { @class = "col-form-label" })
                            <div class="col-9" style="margin-left:-0.5rem">
                                @Html.EditorFor(model => model.PictureUrl, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                                @Html.ValidationMessageFor(model => model.PictureUrl, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "col-form-label col-3" })
                            <div class="col-9 ">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-3" })
                            <div class="col-9 ">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "text" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="row mb-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label col-3" })
                            <div class="col-9">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "col-form-label col-3" })
                            <div class="col-9">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="modal-footer">
                            <input type="submit" value="Sign up" class="btn btn-primary" />
                        </div>

                    </div>
                    }

                </div>

            </div>
        </div>
    </div>
</main>



@section Scripts{
    <script>
            $(document).ready(function () {
                // Check the value of ViewBag.User
                  var isUser = @(ViewBag.User != null && (bool)ViewBag.User ? "true" : "false");

                // Show the modal if ViewBag.User is true
                if (isUser) {
                    $('#staticBackdrop').modal('show');
                }
            });

    </script>
    }